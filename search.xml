<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一 作用域</title>
    <url>/2020/07/04/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。"><a href="#作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。" class="headerlink" title="作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。"></a>作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。</h2><h2 id="1-1-词法作用域"><a href="#1-1-词法作用域" class="headerlink" title="1.1 词法作用域"></a>1.1 词法作用域</h2><h5 id="历史："><a href="#历史：" class="headerlink" title="历史："></a>历史：</h5><span class="label warning">基础的作用域分为两种，词法作用域或动态作用域，js等大多数都采用的是词法作用域。只有如Bash脚本采用动态作用域。</span>
<h5 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h5><span class="label warning">词法作用域包括 （全局作用域） 和 （函数作用域） 简单来说：全局作用域就是函数外的，是共享的; 函数作用域就是函数内部的,是私有的</span>


<h5 id="类型："><a href="#类型：" class="headerlink" title="类型："></a>类型：</h5><div class="note default no-icon">
            <p>在JS中词法作用域的规则：(重点)</p><ul><li>函数允许</li><li></li><li></li></ul>
          </div>




<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="string">"这里是第一行代码 JavaScript"</span></span><br></pre></td></tr></table></figure>
<h3 id="测试代码3"><a href="#测试代码3" class="headerlink" title="测试代码3"></a>测试代码3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="string">"这里是第一行代码 JavaScript"</span></span><br></pre></td></tr></table></figure>
<div class="note [class] [no-icon]">
            <p>这里写你需要写的内容</p>
          </div>



]]></content>
  </entry>
  <entry>
    <title>一 三测试功能</title>
    <url>/2020/07/05/%E7%AC%AC%E4%B8%89%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。"><a href="#作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。" class="headerlink" title="作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。"></a>作用域：能够储存变量当中的值，并且能在之后对这个值进行访问或修改。</h2><h2 id="1-1-词法作用域"><a href="#1-1-词法作用域" class="headerlink" title="1.1 词法作用域"></a>1.1 词法作用域</h2><h5 id="历史："><a href="#历史：" class="headerlink" title="历史："></a>历史：</h5><span class="label warning">基础的作用域分为两种，词法作用域或动态作用域，js等大多数都采用的是词法作用域。只有如Bash脚本采用动态作用域。</span>
<h5 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h5><span class="label warning">词法作用域包括 （全局作用域） 和 （函数作用域） 简单来说：全局作用域就是函数外的，是共享的; 函数作用域就是函数内部的,是私有的</span>


<h5 id="类型："><a href="#类型：" class="headerlink" title="类型："></a>类型：</h5><div class="note default no-icon">
            <p>在JS中词法作用域的规则：(重点)</p><ul><li>函数允许</li><li></li><li></li></ul>
          </div>




<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="string">"这里是第一行代码 JavaScript"</span></span><br></pre></td></tr></table></figure>
<h3 id="测试代码3"><a href="#测试代码3" class="headerlink" title="测试代码3"></a>测试代码3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="string">"这里是第一行代码 JavaScript"</span></span><br></pre></td></tr></table></figure>
<div class="note [class] [no-icon]">
            <p>这里写你需要写的内容</p>
          </div>



]]></content>
  </entry>
  <entry>
    <title>第二篇博客</title>
    <url>/2020/07/04/%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>这里是秋吉的博客，用于记录学习生活.</p>
<h2 id="这里是秋吉的个人博客"><a href="#这里是秋吉的个人博客" class="headerlink" title="这里是秋吉的个人博客"></a>这里是秋吉的个人博客</h2><h2 id="开始记录生活吧"><a href="#开始记录生活吧" class="headerlink" title="开始记录生活吧"></a>开始记录生活吧</h2><h3 id="创建第一行代码"><a href="#创建第一行代码" class="headerlink" title="创建第一行代码"></a>创建第一行代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">console.log(<span class="string">"hello-world.md"</span>);</span><br></pre></td></tr></table></figure>

<h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">var u = <span class="keyword">function</span>(f) &#123;</span><br><span class="line">    <span class="keyword">if</span> (2 &gt; f.length) &#123;</span><br><span class="line">        var d = f.charCodeAt(0);</span><br><span class="line">        <span class="built_in">return</span> 128 &gt; d ? f: 2048 &gt; d ? a(192 | d &gt;&gt;&gt; 6) + a(128 | d &amp; 63) : a(224 | d &gt;&gt;&gt; 12 &amp; 15) + a(128 | d &gt;&gt;&gt; 6 &amp; 63) + a(128 | d &amp; 63)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试代码2"><a href="#测试代码2" class="headerlink" title="测试代码2"></a>测试代码2</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="string">"这里是第二行代码 JavaScript"</span></span><br></pre></td></tr></table></figure>
<h3 id="测试代码3"><a href="#测试代码3" class="headerlink" title="测试代码3"></a>测试代码3</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="string">"这里是第二行代码 JavaScript"</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
